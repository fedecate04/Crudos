# BLABO BALANCE PRO - APP EN STREAMLIT PARA TESIS FINALBLABO BALANCE PRO - APP EN STREAMLIT PARA TESIS FINAL

import streamlit
as st import pandas 
as pd import numpy 
as np from io 
import BytesIO

#CONFIGURACION GENERAL

st.set_page_config(page_title="BLABO Balance Pro", layout="wide") st.title("üõ¢Ô∏è BLABO Balance Pro - Simulador T√©cnico de Limpieza de Tanques")

#INTRODUCCION

with st.expander("üìò Introducci√≥n al Sistema BLABO", expanded=True): st.markdown(""" El sistema BLABO¬Æ permite la limpieza automatizada de tanques de almacenamiento de crudo sin ingreso de personal, recuperando hidrocarburos, removiendo lodo paraf√≠nico y separando agua y s√≥lidos.

Esta aplicaci√≥n simula el balance de masa y energ√≠a de cada m√≥dulo del sistema, con visualizaci√≥n de f√≥rmulas
y generaci√≥n autom√°tica de un informe PDF al finalizar.
""")

#ENTRADA DE DATOS

st.sidebar.header("üîß Par√°metros de Entrada") with st.sidebar.form("input_form"): V_tanque = st.number_input("Capacidad del tanque (m¬≥)", value=10000) H_lodo = st.number_input("Altura del lodo (m)", value=4.0) densidad_lodo = st.number_input("Densidad del lodo (kg/m¬≥)", value=950) HC_pct = st.slider("% Hidrocarburos", 0, 100, 70) agua_pct = st.slider("% Agua", 0, 100, 15) sol_inorg_pct = st.slider("% S√≥lidos inorg√°nicos", 0, 100, 10) sol_org_pct = st.slider("% S√≥lidos org√°nicos", 0, 100, 5) temp_ini = st.number_input("Temperatura inicial (¬∞C)", value=20) temp_fin = st.number_input("Temperatura objetivo (¬∞C)", value=80) caudal_recirc = st.number_input("Caudal de recirculaci√≥n (m¬≥/h)", value=100) submit = st.form_submit_button("Calcular")

if submit: # CALCULOS BASE volumen_lodo = V_tanque * H_lodo / H_lodo  # simplificado masa_total = volumen_lodo * densidad_lodo

masas = {
    "Hidrocarburos": masa_total * HC_pct / 100,
    "Agua": masa_total * agua_pct / 100,
    "S√≥lidos inorg√°nicos": masa_total * sol_inorg_pct / 100,
    "S√≥lidos org√°nicos": masa_total * sol_org_pct / 100
}

st.success("Datos cargados y c√°lculos iniciales realizados")
st.write(f"**Masa total del lodo:** {masa_total:,.0f} kg")
st.write("**Composici√≥n del lodo:**")
st.dataframe(pd.DataFrame(masas, index=["kg"]).T)

st.markdown("---")
st.header("‚öôÔ∏è C√°lculos por M√≥dulo")

# Ejemplo: MODULO 2 - RECIRCULACION
st.subheader("M√≥dulo 2 - Recirculaci√≥n + Hidrociclones")
st.markdown("""
Este m√≥dulo recircula aceite/lodo calentado para disolver el fondo del tanque. Parte del fluido va a boquillas,
y parte al sistema de separaci√≥n. Se calienta mediante vapor indirecto.
""")

m_recirc = caudal_recirc * 900  # flujo m√°sico aproximado
Cp_aceite = 2.1
Q = m_recirc * Cp_aceite * (temp_fin - temp_ini)

st.latex(r"Q = \dot{m} \cdot C_p \cdot \Delta T")
st.markdown(f"Donde: \n- ÓÄÅ\dot{{m}} = {m_recirc:,.0f}ÓÄÅ kg/h \n- ÓÄÅC_p = {Cp_aceite}ÓÄÅ kJ/kg¬∑K \n- ÓÄÅ\Delta T = {temp_fin - temp_ini}ÓÄÅ ¬∞C")

st.success(f"Energ√≠a t√©rmica requerida: {Q/1000:,.2f} MW")

st.markdown("---")
st.header("üìÑ Resultado Final y Exportaci√≥n")
resumen = f"""

Masa total del lodo: {masa_total:,.0f} kg\n Composici√≥n:\n- Hidrocarburos: {masas['Hidrocarburos']:,.0f} kg\n- Agua: {masas['Agua']:,.0f} kg\n- S√≥lidos inorg√°nicos: {masas['S√≥lidos inorg√°nicos']:,.0f} kg\n- S√≥lidos org√°nicos: {masas['S√≥lidos org√°nicos']:,.0f} kg\n\nM√≥dulo 2 - Recirculaci√≥n:\n- Caudal m√°sico: {m_recirc:,.0f} kg/h\n- Energ√≠a t√©rmica estimada: {Q/1000:,.2f} MW"""

buffer = BytesIO()
buffer.write(resumen.encode())
buffer.seek(0)

st.download_button(
    label="üì• Descargar resumen en TXT",
    data=buffer,
    file_name="Resumen_Balance_BLABO.txt",
    mime="text/plain"
)

